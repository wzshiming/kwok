# Save cluster config to <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/kwok.yaml
mkdir -p <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>
mkdir -p <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/pki
# Generate PKI to <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/pki
mkdir -p <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/pki/etcd
mkdir -p <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/pki
mkdir -p <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/manifests
cat <<EOF ><ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/kind.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  apiServerPort: 32766
nodes:
- role: control-plane
  extraPortMappings:
  - containerPort: 2379
    hostPort: 32765
    protocol: TCP
  kubeadmConfigPatches:
  - |
    kind: ClusterConfiguration
    apiServer:
      extraArgs:
        "max-requests-inflight": "0"
        "max-mutating-requests-inflight": "0"
        "enable-priority-and-fairness": "false"
  - |
    kind: ClusterConfiguration
    controllerManager:
      extraArgs:
        "kube-api-qps": "5000"
        "kube-api-burst": "10000"
  - |
    kind: ClusterConfiguration
    scheduler:
      extraArgs:
        "kube-api-qps": "5000"
        "kube-api-burst": "10000"
  # mount the local file on the control plane
  extraMounts:
  - hostPath: <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>
    containerPath: /etc/kwok/
  - hostPath: <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/manifests
    containerPath: /etc/kubernetes/manifests
  - hostPath: <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/pki
    containerPath: /etc/kubernetes/pki
EOF
cat <<EOF ><ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/manifests/kwok-controller.yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  name: kwok-controller
  namespace: kube-system
spec:
  containers:
  - args:
    - --manage-all-nodes=false
    - --manage-nodes-with-annotation-selector=kwok.x-k8s.io/node=fake
    - --kubeconfig=~/.kube/config
    - --config=~/.kwok/kwok.yaml
    - --tls-cert-file=/etc/kubernetes/pki/admin.crt
    - --tls-private-key-file=/etc/kubernetes/pki/admin.key
    - --node-ip=$(POD_IP)
    - --node-name=kwok-controller.kube-system.svc
    - --node-port=10247
    - --server-address=0.0.0.0:10247
    - --node-lease-duration-seconds=40
    command:
    - kwok
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: localhost/kwok:test
    imagePullPolicy: Never
    name: kwok-controller
    resources: {}
    volumeMounts:
    - mountPath: ~/.kube/config
      name: volume-0
      readOnly: true
    - mountPath: /etc/kubernetes/pki/ca.crt
      name: volume-1
      readOnly: true
    - mountPath: /etc/kubernetes/pki/admin.crt
      name: volume-2
      readOnly: true
    - mountPath: /etc/kubernetes/pki/admin.key
      name: volume-3
      readOnly: true
    - mountPath: ~/.kwok/kwok.yaml
      name: volume-4
      readOnly: true
  hostNetwork: true
  restartPolicy: Always
  securityContext:
    runAsGroup: 0
    runAsUser: 0
  volumes:
  - hostPath:
      path: /etc/kubernetes/admin.conf
    name: volume-0
  - hostPath:
      path: /etc/kubernetes/pki/ca.crt
    name: volume-1
  - hostPath:
      path: /etc/kubernetes/pki/admin.crt
    name: volume-2
  - hostPath:
      path: /etc/kubernetes/pki/admin.key
    name: volume-3
  - hostPath:
      path: /etc/kwok/kwok.yaml
    name: volume-4
status: {}
EOF
docker pull docker.io/kindest/node:v1.29.0
docker pull localhost/kwok:test
# Save cluster config to <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/kwok.yaml
KIND_EXPERIMENTAL_PROVIDER=docker kind create cluster --config <ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/kind.yaml --name kwok-<CLUSTER_NAME> --image docker.io/kindest/node:v1.29.0 --wait 29m
KIND_EXPERIMENTAL_PROVIDER=docker kind load docker-image localhost/kwok:test --name kwok-<CLUSTER_NAME>
kubectl config view --minify=true --raw=true
cat <<EOF ><ROOT_DIR>/workdir/clusters/<CLUSTER_NAME>/kubeconfig.yaml
EOF
kubectl cordon kwok-<CLUSTER_NAME>-control-plane
docker exec kwok-<CLUSTER_NAME>-control-plane chmod -R +r /etc/kubernetes/pki
# Add context kwok-<CLUSTER_NAME> to ~/.kube/config
